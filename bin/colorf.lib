# shellcheck shell=sh

# Color functions library (auto generated by: tools/color.sh)
#
if ! command -v red >/dev/null; then
  . color.lib

# <html><h2>reset - Show arguments in Reset</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in Reset:</dt>
# <dd>
# <pre><code class="language-bash">reset Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
reset() { test "$#" -eq 0 || { printf '%b' "${Reset}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>black - Show arguments in Black</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in Black:</dt>
# <dd>
# <pre><code class="language-bash">black Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
black() { test "$#" -eq 0 || { printf '%b' "${Black}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>blackbold - Show arguments in BlackBold</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in BlackBold:</dt>
# <dd>
# <pre><code class="language-bash">blackbold Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
blackbold() { test "$#" -eq 0 || { printf '%b' "${BlackBold}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>blackdim - Show arguments in BlackDim</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in BlackDim:</dt>
# <dd>
# <pre><code class="language-bash">blackdim Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
blackdim() { test "$#" -eq 0 || { printf '%b' "${BlackDim}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>blackunder - Show arguments in BlackUnder</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in BlackUnder:</dt>
# <dd>
# <pre><code class="language-bash">blackunder Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
blackunder() { test "$#" -eq 0 || { printf '%b' "${BlackUnder}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>blackinvert - Show arguments in BlackInvert</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in BlackInvert:</dt>
# <dd>
# <pre><code class="language-bash">blackinvert Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
blackinvert() { test "$#" -eq 0 || { printf '%b' "${BlackInvert}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>blackbg - Show arguments in BlackBg</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in BlackBg:</dt>
# <dd>
# <pre><code class="language-bash">blackbg Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
blackbg() { test "$#" -eq 0 || { printf '%b' "${BlackBg}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>red - Show arguments in Red</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in Red:</dt>
# <dd>
# <pre><code class="language-bash">red Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
red() { test "$#" -eq 0 || { printf '%b' "${Red}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>redbold - Show arguments in RedBold</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in RedBold:</dt>
# <dd>
# <pre><code class="language-bash">redbold Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
redbold() { test "$#" -eq 0 || { printf '%b' "${RedBold}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>reddim - Show arguments in RedDim</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in RedDim:</dt>
# <dd>
# <pre><code class="language-bash">reddim Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
reddim() { test "$#" -eq 0 || { printf '%b' "${RedDim}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>redunder - Show arguments in RedUnder</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in RedUnder:</dt>
# <dd>
# <pre><code class="language-bash">redunder Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
redunder() { test "$#" -eq 0 || { printf '%b' "${RedUnder}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>redinvert - Show arguments in RedInvert</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in RedInvert:</dt>
# <dd>
# <pre><code class="language-bash">redinvert Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
redinvert() { test "$#" -eq 0 || { printf '%b' "${RedInvert}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>redbg - Show arguments in RedBg</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in RedBg:</dt>
# <dd>
# <pre><code class="language-bash">redbg Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
redbg() { test "$#" -eq 0 || { printf '%b' "${RedBg}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>green - Show arguments in Green</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in Green:</dt>
# <dd>
# <pre><code class="language-bash">green Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
green() { test "$#" -eq 0 || { printf '%b' "${Green}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>greenbold - Show arguments in GreenBold</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in GreenBold:</dt>
# <dd>
# <pre><code class="language-bash">greenbold Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
greenbold() { test "$#" -eq 0 || { printf '%b' "${GreenBold}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>greendim - Show arguments in GreenDim</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in GreenDim:</dt>
# <dd>
# <pre><code class="language-bash">greendim Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
greendim() { test "$#" -eq 0 || { printf '%b' "${GreenDim}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>greenunder - Show arguments in GreenUnder</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in GreenUnder:</dt>
# <dd>
# <pre><code class="language-bash">greenunder Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
greenunder() { test "$#" -eq 0 || { printf '%b' "${GreenUnder}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>greeninvert - Show arguments in GreenInvert</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in GreenInvert:</dt>
# <dd>
# <pre><code class="language-bash">greeninvert Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
greeninvert() { test "$#" -eq 0 || { printf '%b' "${GreenInvert}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>greenbg - Show arguments in GreenBg</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in GreenBg:</dt>
# <dd>
# <pre><code class="language-bash">greenbg Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
greenbg() { test "$#" -eq 0 || { printf '%b' "${GreenBg}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>yellow - Show arguments in Yellow</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in Yellow:</dt>
# <dd>
# <pre><code class="language-bash">yellow Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
yellow() { test "$#" -eq 0 || { printf '%b' "${Yellow}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>yellowbold - Show arguments in YellowBold</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in YellowBold:</dt>
# <dd>
# <pre><code class="language-bash">yellowbold Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
yellowbold() { test "$#" -eq 0 || { printf '%b' "${YellowBold}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>yellowdim - Show arguments in YellowDim</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in YellowDim:</dt>
# <dd>
# <pre><code class="language-bash">yellowdim Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
yellowdim() { test "$#" -eq 0 || { printf '%b' "${YellowDim}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>yellowunder - Show arguments in YellowUnder</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in YellowUnder:</dt>
# <dd>
# <pre><code class="language-bash">yellowunder Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
yellowunder() { test "$#" -eq 0 || { printf '%b' "${YellowUnder}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>yellowinvert - Show arguments in YellowInvert</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in YellowInvert:</dt>
# <dd>
# <pre><code class="language-bash">yellowinvert Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
yellowinvert() { test "$#" -eq 0 || { printf '%b' "${YellowInvert}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>yellowbg - Show arguments in YellowBg</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in YellowBg:</dt>
# <dd>
# <pre><code class="language-bash">yellowbg Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
yellowbg() { test "$#" -eq 0 || { printf '%b' "${YellowBg}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>blue - Show arguments in Blue</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in Blue:</dt>
# <dd>
# <pre><code class="language-bash">blue Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
blue() { test "$#" -eq 0 || { printf '%b' "${Blue}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>bluebold - Show arguments in BlueBold</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in BlueBold:</dt>
# <dd>
# <pre><code class="language-bash">bluebold Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
bluebold() { test "$#" -eq 0 || { printf '%b' "${BlueBold}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>bluedim - Show arguments in BlueDim</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in BlueDim:</dt>
# <dd>
# <pre><code class="language-bash">bluedim Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
bluedim() { test "$#" -eq 0 || { printf '%b' "${BlueDim}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>blueunder - Show arguments in BlueUnder</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in BlueUnder:</dt>
# <dd>
# <pre><code class="language-bash">blueunder Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
blueunder() { test "$#" -eq 0 || { printf '%b' "${BlueUnder}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>blueinvert - Show arguments in BlueInvert</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in BlueInvert:</dt>
# <dd>
# <pre><code class="language-bash">blueinvert Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
blueinvert() { test "$#" -eq 0 || { printf '%b' "${BlueInvert}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>bluebg - Show arguments in BlueBg</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in BlueBg:</dt>
# <dd>
# <pre><code class="language-bash">bluebg Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
bluebg() { test "$#" -eq 0 || { printf '%b' "${BlueBg}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>magenta - Show arguments in Magenta</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in Magenta:</dt>
# <dd>
# <pre><code class="language-bash">magenta Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
magenta() { test "$#" -eq 0 || { printf '%b' "${Magenta}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>magentabold - Show arguments in MagentaBold</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in MagentaBold:</dt>
# <dd>
# <pre><code class="language-bash">magentabold Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
magentabold() { test "$#" -eq 0 || { printf '%b' "${MagentaBold}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>magentadim - Show arguments in MagentaDim</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in MagentaDim:</dt>
# <dd>
# <pre><code class="language-bash">magentadim Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
magentadim() { test "$#" -eq 0 || { printf '%b' "${MagentaDim}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>magentaunder - Show arguments in MagentaUnder</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in MagentaUnder:</dt>
# <dd>
# <pre><code class="language-bash">magentaunder Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
magentaunder() { test "$#" -eq 0 || { printf '%b' "${MagentaUnder}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>magentainvert - Show arguments in MagentaInvert</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in MagentaInvert:</dt>
# <dd>
# <pre><code class="language-bash">magentainvert Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
magentainvert() { test "$#" -eq 0 || { printf '%b' "${MagentaInvert}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>magentabg - Show arguments in MagentaBg</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in MagentaBg:</dt>
# <dd>
# <pre><code class="language-bash">magentabg Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
magentabg() { test "$#" -eq 0 || { printf '%b' "${MagentaBg}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>cyan - Show arguments in Cyan</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in Cyan:</dt>
# <dd>
# <pre><code class="language-bash">cyan Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
cyan() { test "$#" -eq 0 || { printf '%b' "${Cyan}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>cyanbold - Show arguments in CyanBold</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in CyanBold:</dt>
# <dd>
# <pre><code class="language-bash">cyanbold Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
cyanbold() { test "$#" -eq 0 || { printf '%b' "${CyanBold}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>cyandim - Show arguments in CyanDim</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in CyanDim:</dt>
# <dd>
# <pre><code class="language-bash">cyandim Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
cyandim() { test "$#" -eq 0 || { printf '%b' "${CyanDim}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>cyanunder - Show arguments in CyanUnder</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in CyanUnder:</dt>
# <dd>
# <pre><code class="language-bash">cyanunder Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
cyanunder() { test "$#" -eq 0 || { printf '%b' "${CyanUnder}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>cyaninvert - Show arguments in CyanInvert</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in CyanInvert:</dt>
# <dd>
# <pre><code class="language-bash">cyaninvert Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
cyaninvert() { test "$#" -eq 0 || { printf '%b' "${CyanInvert}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>cyanbg - Show arguments in CyanBg</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in CyanBg:</dt>
# <dd>
# <pre><code class="language-bash">cyanbg Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
cyanbg() { test "$#" -eq 0 || { printf '%b' "${CyanBg}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>grey - Show arguments in Grey</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in Grey:</dt>
# <dd>
# <pre><code class="language-bash">grey Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
grey() { test "$#" -eq 0 || { printf '%b' "${Grey}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>greybold - Show arguments in GreyBold</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in GreyBold:</dt>
# <dd>
# <pre><code class="language-bash">greybold Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
greybold() { test "$#" -eq 0 || { printf '%b' "${GreyBold}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>greydim - Show arguments in GreyDim</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in GreyDim:</dt>
# <dd>
# <pre><code class="language-bash">greydim Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
greydim() { test "$#" -eq 0 || { printf '%b' "${GreyDim}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>greyunder - Show arguments in GreyUnder</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in GreyUnder:</dt>
# <dd>
# <pre><code class="language-bash">greyunder Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
greyunder() { test "$#" -eq 0 || { printf '%b' "${GreyUnder}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>greyinvert - Show arguments in GreyInvert</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in GreyInvert:</dt>
# <dd>
# <pre><code class="language-bash">greyinvert Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
greyinvert() { test "$#" -eq 0 || { printf '%b' "${GreyInvert}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

# <html><h2>greybg - Show arguments in GreyBg</h2>
# <h3>Examples</h3>
# <dl>
# <dt>Show arguments in GreyBg:</dt>
# <dd>
# <pre><code class="language-bash">greybg Show Text
# </code></pre>
# </dd>
# </dl>
# </html>
greybg() { test "$#" -eq 0 || { printf '%b' "${GreyBg}"; printf '%s' "$@"; printf '%b' "${Reset}"; }; }

fi
