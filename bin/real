#!/bin/sh

# Absolute logical (symlink, default) or resolved (physical, pwd -P) path (Accepts one level up if it doesn't exist).
#
STRICT=1 . helpers.lib

#######################################
# Absolute logical (symlink, default) or resolved (physical, pwd -P) path (Accepts one level up if it doesn't exists)
# Arguments:
#   --fail          Exit if path does not exists (default: unset)
#   --resolved      Resolve symlinks (pwd -P).
#   path            Path (default: cwd).
# Output:
#   Path or help message to stdout.
# Returns:
#   1 if parent directory does not exist.
# Examples:
#   $ real --resolved /tmp/file  # one level up: accepts, if not file/dir.
#   /private/tmp/file
#   $ real --resolved --fail /tmp/file    # one level up: does not accept, if not file/dir.
#   Directory not Found: /tmp/file
#   $ real --resolved --fail --quiet /tmp/file
#   Directory not Found: /tmp/file
#   $ real --resolved /tmp/file1/file2
#   Directory not Found: /tmp/file1
#   $ cd /tmp; rm -rf d1 d2 d3; mkdir d1; ln -s d1 d2; ln -s d2 d3; touch d1/f1;ln -s d1/f1 d1/f2;real --resolved d3/f2
#   /private/tmp/d1/f1
#   $ cd /tmp; rm -rf d1 d2; mkdir d1; ln -s d1 d2; touch d1/f1;ln -s d1/f1 d1/f2;real --resolved d2/f2
#   /private/tmp/d1/f1
#   $ cd /tmp; rm -rf d1 d2; mkdir d1; ln -s d1 d2; touch d1/f1;ln -s d1/f1 d1/f2;real --resolved d2/f1
#   /private/tmp/d1/f1
#   $ cd /tmp; rm -rf d1 d2; mkdir d1; ln -s d1 d2; touch d1/f1;ln -s d1/f1 d1/f2;real --resolved d1/f2
#   /private/tmp/dir1/file1
#######################################
if [ "${PARSED-}" ] && unset PARSED; then
  resolved=false

  fail=false
  for arg do
    case "${arg}" in
      --fail) fail=true ;;
      --resolved) resolved=true ;;
      *) input="${arg}"
    esac
  done

  input="${input:-}"

  if [ -d "${input:-}" ]; then
    cd "${input}" 2>/dev/null || die Directory not Found: "${input}"
  elif [ -L "${input}" ] && $resolved; then
    while [ -L "${input}" ]; do
      input="$(readlink "${input}")"
    done
    dirname="$(dirname "${input}")"
    cd "${dirname}" 2>/dev/null || die Directory not Found: "${dirname}"
    basename="$(basename "${input}")"
  elif [ -f "${input}" ]; then
    dirname="$(dirname "${input}")"
    cd "${dirname}" 2>/dev/null || die Directory not Found: "${dirname}"
    basename="$(basename "${input}")"
  else
    ! $fail || die Directory or File not Found: "${input}"
    dirname="$(dirname "${input}")"
    cd "${dirname}" 2>/dev/null || die Directory not Found: "${dirname}"
    basename="$(basename "${input}")"
  fi

  if $resolved; then
    dirname="$(pwd -P)"
  else
    dirname="$(pwd)"
  fi

  [ ! "${basename-}" ] || { echo "${dirname}/${basename}"; exit; }
  echo "${dirname}"
  unset arg basename dirname input resolved
else
  PARSE="${0}" parse "${@:-}"
fi
