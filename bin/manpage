#!/bin/sh

#
# Converts, tests and commit changes for AsciiDoc man pages in a repository.
STRICT=1 . helpers.lib || exit 1

adoc() {
  asciidoctor -b manpage \
    -a doctitle="${top_left}" \
    -a author="${author}" \
    -a manmanual="${top_center}" \
    -a mansource="${bottom_left}" \
    -a name="${name}" \
    -a desc="${desc}" \
    -a owner="${owner}" \
    -a repo="${repo}" \
    -o "${1}" "${file}"
  tests "${1}"
}

changed() {
  git add "${1}" && git commit --quiet -m "${script}" "${1}" >/dev/null 2>&1 && git push --quiet
  true
}

run() {
  tmp_run="$(mktemp -d)"
  [ -d "${dest_dir}" ] || { mkdir -p "${dest_dir}"; touch "${dest_dir}/.gitkeep"; changed "${dest_dir}/.gitkeep"; }

  if [ -f "${dest_file}" ]; then
    tmp_file="${tmp_run}/${dest_filename}"
    adoc "${tmp_file}" && if ! cmp -s "${dest_file}" "${tmp_file}"; then
      mv "${tmp_file}" "${dest_file}"
      changed "${dest_file}"
    fi
  else
    adoc "${dest_file}" && changed "${dest_file}"
  fi
  unset tmp_run
}

tests() {
    man -P cat "${1}" | grep -qE \
    "^${top_left}| ${top_center} |${top_right}$|^${bottom_left}|${name}| ${author} " \
    || die Test Failed: man -P cat "${1}"
}

main() {
  if [ "${PARSED-}" ]; then
    cd "${1:-$(git top)}" || die Invalid Directory: "${1:-}", or Git Top "$(git top || true)"

    tmp_main="$(mktemp)"
    find . -type f -name "*.lib" > "${tmp_main}"
    while read -r i; do
      . "${i}"
    done < "${tmp_main}"

    find . -type d \( -name "bin" -o -name "sbin" \) > "${tmp_main}"
    while read -r i; do
      export PATH="${i}:${PATH}"
    done

    author="$(git config user.username || die Invalid Git Username)"
    owner="$(git owner || die Invalid Git Owner)"
    repo="$(git name || die Invalid Git Repo Name)"
    script=${0##*/}
    version=$(git latest || die Invalid Git Latest Version)

    find . ./src/man -type f \( -name "*.adoc" -o -name "README.adoc" \) -mindepth 1 -maxdepth 1 > "${tmp_main}"
    while read -r file; do
      src="${file%.*}"
      name="${src##*/}"  # name.1 or name

      case "${name}" in
        README)
          name="$(head -1 README.adoc | awk -F '[()= ]' '/\([1-8])/ { print $3 }')"
          [ "${name}" != 'doctitle' ] || die Invalid Doctitle for README.adoc: "${name}"
          section="$(head -1 README.adoc | awk -F '[()= ]' '/\([1-8])/ { print $4 }')"
          ;;

        *.[1-8]) name="${name%.*}"; section="${name##*.}";;
      esac
      [ "${name}" != 'parse' ] || opt='-parse'
      desc="$(${name} ${opt} --desc || die Invalid Desc for: "${name}")"
      section="${section:-1}"

      dest_filename="${name}.${section}"  # name.1

      dest_dir="./share/man/man${section}"
      dest_file="${dest_dir}/${dest_filename}"

      capitilize="$(echo "${name}" | awk '{ print toupper( substr( $0, 1, 1 ) ) substr( $0, 2); }')"
      bottom_left="${capitilize} ${version}"
      top_center="${capitilize} Manual"
      top_left="$(echo "${name}" | tr '[:lower:]' '[:upper:]')(${section})"
      top_right=${top_left}

      run
    done < "${tmp_main}"
    unset capitilize
    postparse
  else
    PARSE="${0}" parse "${@:-}"
  fi
}

main "${@:-}"
