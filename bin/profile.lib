# shellcheck shell=sh

# System profile.
#

unset BASH_ENV ENV

if test -z "${PROFILE_LIB_SOURCED}" || test "${FORCE}" = 1; then
# <html><h2>Base $PATH</h2>
# <p><strong><code>$PATH</code></strong> contains the initial $PATH.</p>
# <p>It's needed by profile.lib since sourcing an when os.lib is source directly.</p>
# <h3>Examples</h3>
# <dl>
# <dt>Usage:</dt>
# <dd>
# <pre><code class="language-bash">PATH=&quot;${BASE_PATH:-${PATH}}&quot;; export PATH
# </code></pre>
# </dd>
# </dl>
# </html>
  export BASE_PATH='/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  export PATH="${BASE_PATH}"
# <html><h2>Force removal of cached library files</h2>
# <p><strong><code>$FORCE</code></strong> set to 1 to update all rc libraries.</p>
# <h3>Examples</h3>
# <dl>
# <dt>To update then, sourcing system profile:</dt>
# <dd>
# <pre><code class="language-bash">FORCE=1 . /etc/profile
# </code></pre>
# </dd>
# </dl>
# <dt>To update them, running profile.lib:</dt>
# <dd>
# <pre><code class="language-bash">profile.lib --force
# </code></pre>
# </dd>
# </dl>
# </html>
  FORCE="${FORCE-0}"
# <html><h2>Profile Library Has Been Sourced</h2>
# <p><strong><code>$PROFILE_LIB_SOURCED</code></strong> set to 1 when profile.lib has been sourced.</p>
# </html>
  export PROFILE_LIB_SOURCED=1

  . root.lib
  . os.lib
  . dev.lib
fi

BASH_ENV="$(command -pv profile.lib || echo /etc/profile)"
ENV="${BASH_ENV}"

####################################### PS1
# Moved here since needed by sudo because it's not exported and needed by sudoers shell_noargs ('sudo -S').
# BASH_ENV/ENV will trigger the assignment.
#if [ "${PS1-}" ]; then
#    export Reset='\033[0m'
#    PS1="\[\e]0;\h@\u: \w\a\]${Reset}"
#fi

####################################### Executed: force & parse
#
if test "$#" -ne 0 && test "${PARSED-}"; then
  unset PARSED
  for arg do
    case "${arg}" in
      --force) FORCE=1 . "$0"
    esac
  done
elif test "$#" -ne 0; then
    PARSE="$0" parse "$@"
fi

