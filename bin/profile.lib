# shellcheck shell=sh

# System profile.
#

unset BASH_ENV ENV

if test "${PROFILE_LIB_SOURCED-0}" -eq 0 || test "${FORCE-0}" -eq 1; then
  PATH='/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'; export PATH
# <html><h2>Source Development Library</h2>
# <p><strong><code>$DEV</code></strong> when is 1 sources dev.lib and change directory of generated libraries.</p>
# </html>
  DEV="${DEV:-0}"; export DEV
# <html><h2>Force removal of cached library files</h2>
# <p><strong><code>$FORCE</code></strong> set to 1 to update all rc libraries.</p>
# <h3>Examples</h3>
# <dl>
# <dt>To update then, sourcing system profile:</dt>
# <dd>
# <pre><code class="language-bash">FORCE=1 . /etc/profile
# </code></pre>
# </dd>
# </dl>
# <dl>
# <dt>To update them, running profile.lib:</dt>
# <dd>
# <pre><code class="language-bash">profile.lib --force
# </code></pre>
# </dd>
# </dl>
# </html>
  FORCE="${FORCE:-0}"
# <html><h2>Profile Library Has Been Sourced</h2>
# <p><strong><code>$PROFILE_LIB_SOURCED</code></strong> set to 1 when profile.lib has been sourced.</p>
# </html>
  PROFILE_LIB_SOURCED=1; export PROFILE_LIB_SOURCED
# <html><h2>Generated rc.d Shell Libraries</h2>
# <p><strong><code>$RCSHARE</code></strong> contains the directory to store auto generated libraries.</p>
# </html>
  RC_D="${RC_DEV:+/tmp}/etc/rc.d"; export RC_D

  . sudo.lib
  . system.lib
  . dev.lib
fi

BASH_ENV="$(command -pv profile.lib || echo /etc/profile)"
ENV="${BASH_ENV}"
unset FORCE

####################################### PS1
# Moved here since needed by sudo because it's not exported and needed by sudoers shell_noargs ('sudo -S').
# BASH_ENV/ENV will trigger the assignment.
#if [ "${PS1-}" ]; then
#    export Reset='\033[0m'
#    PS1="\[\e]0;\h@\u: \w\a\]${Reset}"
#fi

####################################### Executed: force & parse
#
if test "$#" -ne 0 && test "${PARSED-}"; then
  unset PARSE PARSED
  case "$1" in
    --force) shift; FORCE=1 . profile.lib
  esac
elif test "$#" -ne 0; then
  . helpers.lib
  PARSE="$0" parse "$@"
fi

