# shellcheck shell=sh

#
# System profile

# TODO: Tengo que comprobar la version remota de alguna forma, o sea que se suba un release y se descargue el latest
#   y se compruebe la version. de lo contrario es imposible controlar las configs, etc.
# TODO: hacer una variable con los directorios a crear cuando se instalar para el rc hacer los ficheros y las configuraciones que se van a guardar.
#   este no se convierte en el instalador porque pesarÃ­a mucho y porque no.
# TODO: guardar el repositorio en /opt/opt o /opt/share y asi ..no se que iba a decir ahora,
# TODO: lo de hacer que en sshd con sudoers sea el lugar de tan abierto el sistema con el bash login y el sudo root login y todo.
#     lo he mandado a reading list, mejor que con usuario y solo actualizar el sudoers con el ssh ....y asi login siempreen root.
export VERSION="0.0.0"

for arg do
  case "${arg}" in
    --version) __ETC_PROFILE_VERSION=1 echo "${VERSION}" ;;
    --force) rm -f "${profile}"; unset __ETC_PROFILE_SOURCED ;;
    *) return 1 2>/dev/null || exit 1
  esac
done; unset arg

####################################### Globals: BASH & SH
#
[ "${BASH_VERSION-}" ] || { [ "${0##*/}" = "sh" ] && SH=1 && ENV=/etc/profile; } || { . /etc/profile.orig; exit; }
export BASH_SH=1 SH

####################################### source: rc.d & ~/.rc
#
compat="/etc/rc.d"
[ -d "${compat}" ] && for i in "${compat}"/??-*.sh; do if [ -r "${i}" ]; then . "${i}" "${@}"; fi; done; unset i
[ -z "${BASH_VERSION}" ] && for i in "${compat}"/??-*.bash; do if [ -r "${i}" ]; then . "${i}" "${@}"; fi; done; unset i
[ -f "${HOME}/.rc" ] && "${HOME}/.rc"
unset compat

####################################### unset
#
unset __PROFILE_SOURCE_IT

[ ! "${__version-}" ] || { echo "${__ETC_PROFILE_VERSION}"; unset __ETC_PROFILE_VERSION; }
