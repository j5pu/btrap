#!/bin/sh
#
# Generate global vars which requires a command to be executed.

#######################################
# PATH:             path
# CLT:              command line tools path
# DARWIN:           1 if 'UNAME' is "Darwin", else NULL (default: NULL)
# DEBIAN:           1 if 'DIST_ID' is "debian", else NULL (default: NULL)
# DEBIAN_LIKE:      1 if "DIST_ID_LIKE is "debian" (default: NULL)
# DIST_CODENAME:    "Catalina", "Big Sur", "kali-rolling", "focal", etc. (default: NULL)
# DIST_ID:          "ubuntu"|"kali"|"macos"|...|NULL (default: NULL)
# DIST_ID_LIKE:     "debian"|...|NULL (default: NULL)
# DIST_VERSION:     macOS <"10.15.1"|"10.16"|...> kali <"2021.2"|...>, ubuntu <"20.04"|...> (default: NULL)
# KALI:             1 if 'DIST_ID' is "kali", else NULL (default: NULL)
# IS_MACOS:         true if 'UNAME' is "Darwin", false on "Linux"
# UBUNTU:           1 if 'UBUNTU' is "kali", else NULL (default: NULL)
if [ "$(uname -s)" = "Darwin" ]; then
  CLT="/Library/Developer/CommandLineTools"
  DARWIN=1
  DIST_ID="macos"
  DIST_VERSION="$(sw_vers -productVersion)"
  case "$(echo "${DIST_VERSION}" | awk -F '.' '{ print $1.$2 }')" in
    10.13) DIST_CODENAME="High Sierra" ;;
    10.14) DIST_CODENAME="Mojave" ;;
    10.15) DIST_CODENAME="Catalina" ;;
    10.16) DIST_CODENAME="Big Sur" ;;
    10.17) DIST_CODENAME="Monterey" ;;
    *) DIST_CODENAME="Other" ;;
  esac
  IS_MACOS=true
  PATH="${PATH}:${CLT}"
else
  DARWIN=""
  _file="/etc/os-release"
  if test -f "${_file}"; then
    IFS=$'='
    while read -r _var _value; do
      # shellcheck disable=SC2154
      case "${_var}" in
        ID)
          DIST_ID="${_value}"
          [ "${DIST_ID}" = "debian" ] && DEBIAN=1
          [ "${DIST_ID}" = "kali" ] && KALI=1
          [ "${DIST_ID}" = "ubuntu" ] && UBUNTU=1
          ;;
        ID_LIKE)
          DIST_ID_LIKE="${_value}"
          [ "${DIST_ID_LIKE}" = 'debian' ] && DEBIAN_LIKE=1
          ;;
        VERSION_ID) DIST_VERSION="${_value}" ;;
        VERSION_CODENAME) DIST_CODENAME="${_value}" ;;
      esac
    done < "${_file}"
    unset _file _var _value
  fi
  IS_MACOS=false
  PATH="/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:${PATH}"
fi

#######################################
# BASH_PATH:        bash path
BASH_PATH="$(command -v bash)"

#######################################
# IS_BASH:          is running in bash?
if [ "${BASH_PATH-}" ] && [ "${BASH-}" ] && [ "$BASH" != "/bin/sh" ]; then
  IS_BASH=true
else
  IS_BASH=false
fi

#######################################
# IS_BASH4:         true for bash 4 or greater for associated arrays
if [ "${BASH_PATH-}" ] && [ "$(${BASH_PATH} --version | head -1 | awk -F'[ .]' '{print $4}')" -ge 4 ]; then
  IS_BASH4=true
else
  IS_BASH4=false
fi

#######################################
# BREW_CELLAR:      alias of 'HOMEBREW_CELLAR' with latest version of formula linked to $HOMEBREW_PREFIX/opt
# BREW_PREFIX:      alias of 'HOMEBREW_PREFIX'
# BREW_REPOSITORY:  alias of 'HOMEBREW_REPOSITORY' with homebrew repository and Library with homebrew gems and Taps
# BREW_TAPS:        brew Taps path under '$HOMEBREW_REPOSITORY/Library'
# INFOPATH:         info path
# IS_BREW:          true if brew
# MANPATH:          man path
if [ "$(which brew &>/dev/null)" ]; then
  IS_BREW=true
  eval "$(brew shellenv)"
  BREW_CELLAR="${HOMEBREW_CELLAR}"
  BREW_PREFIX="${HOMEBREW_PREFIX}"
  BREW_REPOSITORY="${HOMEBREW_REPOSITORY}"
  BREW_TAPS="${HOMEBREW_REPOSITORY}/Library/Taps"
else
  IS_BREW=false
fi

#######################################
# IS_COMPLETION:    bash, interactive and version greater than 4
if [ "${PS1-}" ] && $IS_BASH && [ "${BASH_COMPLETION_VERSINFO-}" ] && [ "${BASH_VERSINFO[0]}" -gt 4 ]; then
  IS_COMPLETION=false
else
  IS_COMPLETION=false
fi

#######################################
# IS_CONTAINER:     true if running in docker container
if [ -f /.dockerenv ]; then
  IS_CONTAINER=true
else
  IS_CONTAINER=false
fi

#######################################
# IS_INTERACTIVE:   interactive shell
if [ "${PS1-}" ]; then
  IS_INTERACTIVE=true
else
  IS_INTERACTIVE=false
fi

#######################################
# IS_ROOT:          true if root
if [ "$(id -u)" -eq 0 ]; then
  IS_ROOT=true
else
  IS_ROOT=false
fi

#######################################
# IS_SH:            true if running in sh (for instance: [[ can not be used)
if ($IS_MACOS && [ "$(basename "$(ps -p$$ -ocommand= | awk '{print $1}')")" = 'sh' ]) \
  || (! $IS_MACOS && [ "$(basename "$(ps -p$$ -ocmd= | awk '{print $1}')")" = 'sh' ]); then
  IS_SH=true
else
  IS_SH=false
fi

#######################################
# IS_SH_BASH:       try if sh or bash (for instance: local is not supported in POSIX)
if $IS_SH || $IS_BASH; then
  IS_SH_BASH=true
else
  IS_SH_BASH=false
fi

#######################################
# IS_SUDO:          true if not 'SUDO_UID'
if [ "${SUDO_UID-}" ]; then
  IS_SUDO=true
else
  IS_SUDO=false
fi

#######################################
# IS_USER:          true if 'USER'
if ! $IS_ROOT && ! $IS_SUDO; then
  IS_USER=true
else
  IS_USER=false
fi

#######################################
# IS_USER_DARWIN:   true if 'USER' and 'IS_MACOS' are true
if $IS_USER && $IS_MACOS; then
  IS_USER_DARWIN=true
else
  IS_USER_DARWIN=false
fi

#######################################
# IS_USER_LINUX:    true if 'USER' is true and 'IS_MACOS' is false
if $IS_USER && ! $IS_MACOS; then
  IS_USER_LINUX=true
else
  IS_USER_LINUX=false
fi

#######################################
# PS4:              debugging set -x PS
# shellcheck disable=SC2089
PS4="$(tty -s && tput setaf 5)+\$(echo \${BASH_SOURCE[0]}:\${LINENO}) $(
  tty -s && tput setaf 3
)\$(echo \${LINENO} | sed 's/\$/@/g')\$(echo \${BASH_LINENO[*]} | \
  awk '{\$NF=\"\"; print \$0}' | sed 's/ \$//g'| sed 's/ /@/g')$(
  tty -s && tput sgr0
):$(tty -s && tput setaf 5)\$(echo \${FUNCNAME[*]} | sed 's/ /\//g')$(tty -s && tput sgr0)$ "

#######################################
# SUDOC:            sudo path
SUDOC="$(command -v sudo)"

#######################################
# exports
export APPLICATIONS_USER CLT DARWIN DEBIAN DEBIAN_LIKE DIST_CODENAME DIST_ID DIST_ID_LIKE DIST_VERSION KALI \
  IS_MACOS UBUNTU
export BASH_PATH
export BREW_CELLAR BREW_PREFIX BREW_REPOSITORY BREW_TAPS INFOPATH IS_BREW MANPATH
export IS_BASH
export IS_BASH4
export IS_COMPLETION
export IS_CONTAINER
export IS_INTERACTIVE
export IS_ROOT
export IS_SH
export IS_SH_BASH
export IS_SUDO
export IS_USER
export IS_USER_DARWIN
export IS_USER_LINUX
export PS4
export SUDOC
